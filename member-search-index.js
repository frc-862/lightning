memberSearchIndex = [{"p":"com.lightningrobotics.common.fault","c":"AbstractFaultMonitor","l":"AbstractFaultMonitor(LightningFaultCodes.Code, String, boolean)","url":"%3Cinit%3E(com.lightningrobotics.common.fault.LightningFaultCodes.Code,java.lang.String,boolean)"},{"p":"com.lightningrobotics.common.fault","c":"AbstractFaultMonitor","l":"AbstractFaultMonitor(LightningFaultCodes.Code, String)","url":"%3Cinit%3E(com.lightningrobotics.common.fault.LightningFaultCodes.Code,java.lang.String)"},{"p":"com.lightningrobotics.common.fault","c":"AbstractFaultMonitor","l":"AbstractFaultMonitor(LightningFaultCodes.Code)","url":"%3Cinit%3E(com.lightningrobotics.common.fault.LightningFaultCodes.Code)"},{"p":"com.lightningrobotics.common.testing","c":"AbstractTimedSystemTest","l":"AbstractTimedSystemTest(String, double, LightningFaultCodes.Code, SystemTest.Priority)","url":"%3Cinit%3E(java.lang.String,double,com.lightningrobotics.common.fault.LightningFaultCodes.Code,com.lightningrobotics.common.testing.SystemTest.Priority)"},{"p":"com.lightningrobotics.common.testing","c":"AbstractTimedSystemTest","l":"AbstractTimedSystemTest(String, double, LightningFaultCodes.Code)","url":"%3Cinit%3E(java.lang.String,double,com.lightningrobotics.common.fault.LightningFaultCodes.Code)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConstraint.AccelerationLimit","l":"AccelerationLimit()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConstraint.AccelerationLimit","l":"AccelerationLimit(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryState","l":"accelerationMetersPerSecondSq"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"addConstraint(TrajectoryConstraint)","url":"addConstraint(com.lightningrobotics.common.auto.trajectory.TrajectoryConstraint)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"addConstraints(List<? extends TrajectoryConstraint>)","url":"addConstraints(java.util.List)"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"addDataElement(String, DoubleSupplier)","url":"addDataElement(java.lang.String,java.util.function.DoubleSupplier)"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"addDataElement(String, Supplier<String>)","url":"addDataElement(java.lang.String,java.util.function.Supplier)"},{"p":"com.lightningrobotics.common.logging","c":"CommandLogger","l":"addDataElement(String)","url":"addDataElement(java.lang.String)"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"addDelayedDataElement(String, DoubleSupplier)","url":"addDelayedDataElement(java.lang.String,java.util.function.DoubleSupplier)"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"addElement(String, DoubleSupplier)","url":"addElement(java.lang.String,java.util.function.DoubleSupplier)"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"addElement(String, Supplier<String>)","url":"addElement(java.lang.String,java.util.function.Supplier)"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes","l":"addFaultCode(LightningFaultCodes.Code)","url":"addFaultCode(com.lightningrobotics.common.fault.LightningFaultCodes.Code)"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes","l":"addFaultCode(String, boolean)","url":"addFaultCode(java.lang.String,boolean)"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes","l":"addFaultCode(String)","url":"addFaultCode(java.lang.String)"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveModuleState","l":"angle"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"angleModulus(double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"arcadeDrive(double, double)","url":"arcadeDrive(double,double)"},{"p":"com.lightningrobotics.common.controller","c":"DiffDriveController","l":"atReference()"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"atSetpoint()"},{"p":"com.lightningrobotics.common.auto","c":"Autonomous","l":"Autonomous()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"autonomousInit()"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"boundTheta0To2Pi(double)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"boundTheta0to360(double)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"boundThetaNeg180to180(double)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"boundThetaNegPiToPi(double)"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"calculate(double, double, double)","url":"calculate(double,double,double)"},{"p":"com.lightningrobotics.common.controller","c":"Controller","l":"calculate(double, double)","url":"calculate(double,double)"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"calculate(double, double)","url":"calculate(double,double)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"calculate(double, double)","url":"calculate(double,double)"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"calculate(double)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"calculate(double)"},{"p":"com.lightningrobotics.common.controller","c":"DiffDriveController","l":"calculate(Pose2d, Pose2d, double, double)","url":"calculate(edu.wpi.first.math.geometry.Pose2d,edu.wpi.first.math.geometry.Pose2d,double,double)"},{"p":"com.lightningrobotics.common.controller","c":"DiffDriveController","l":"calculate(Pose2d, TrajectoryState)","url":"calculate(edu.wpi.first.math.geometry.Pose2d,com.lightningrobotics.common.auto.trajectory.TrajectoryState)"},{"p":"com.lightningrobotics.common.command.drivetrain","c":"Characterize","l":"Characterize()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.fault","c":"AbstractFaultMonitor","l":"check()"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"checkBaseFileName()"},{"p":"com.lightningrobotics.common.fault","c":"AbstractFaultMonitor","l":"checkFault()"},{"p":"com.lightningrobotics.common.fault","c":"FaultMonitor","l":"checkFault()"},{"p":"com.lightningrobotics.common.fault","c":"TimedFaultMonitor","l":"checkFault()"},{"p":"com.lightningrobotics.common.fault","c":"UnchangingFaultMonitor","l":"checkFault()"},{"p":"com.lightningrobotics.common.fault","c":"FaultMonitor","l":"checkMonitors()"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"clamp(double, double, double)","url":"clamp(double,double,double)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"clamp(int, int, int)","url":"clamp(int,int,int)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"close()"},{"p":"com.lightningrobotics.common.logging","c":"CommandLogger","l":"close()"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"close()"},{"p":"com.lightningrobotics.common.fault","c":"AbstractFaultMonitor","l":"code"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes.Code","l":"Code(String, boolean)","url":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes.Code","l":"Code(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.lightningrobotics.common.command.core","c":"TimedCommand","l":"command"},{"p":"com.lightningrobotics.common.logging","c":"CommandLogger","l":"CommandLogger(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveModuleState","l":"compareTo(SwerveModuleState)","url":"compareTo(com.lightningrobotics.common.geometry.kinematics.swerve.SwerveModuleState)"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest","l":"compareTo(SystemTest)","url":"compareTo(com.lightningrobotics.common.testing.SystemTest)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"Trajectory","l":"concatenate(Trajectory)","url":"concatenate(com.lightningrobotics.common.auto.trajectory.Trajectory)"},{"p":"com.lightningrobotics.common","c":"LightningContainer","l":"configureAutonomousCommands()"},{"p":"com.lightningrobotics.common","c":"LightningContainer","l":"configureButtonBindings()"},{"p":"com.lightningrobotics.common","c":"LightningContainer","l":"configureDefaultCommands()"},{"p":"com.lightningrobotics.common","c":"LightningContainer","l":"configureFaultCodes()"},{"p":"com.lightningrobotics.common","c":"LightningContainer","l":"configureFaultMonitors()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningDrivetrain","l":"configureMotors()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"configureMotors()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain","l":"configureMotors()"},{"p":"com.lightningrobotics.common","c":"LightningContainer","l":"configureSystemTests()"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"constrain(double, double, double)","url":"constrain(double,double,double)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"constrain(int, int, int)","url":"constrain(int,int,int)"},{"p":"com.lightningrobotics.common.controller","c":"Controller","l":"Controller()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.logging","c":"CrashTracker","l":"CrashTracker()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.logging","c":"CrashTrackingRunnable","l":"CrashTrackingRunnable()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter.Mode","l":"CUBED"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryState","l":"curvatureRadPerMeter"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"dataLogger"},{"p":"com.lightningrobotics.common.logging","c":"DataLoggerOutOfBand","l":"DataLoggerOutOfBand(DoubleSupplier, double)","url":"%3Cinit%3E(java.util.function.DoubleSupplier,double)"},{"p":"com.lightningrobotics.common.logging","c":"DataLoggerOutOfBand","l":"DataLoggerOutOfBand(DoubleSupplier)","url":"%3Cinit%3E(java.util.function.DoubleSupplier)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"deadZone(double, double)","url":"deadZone(double,double)"},{"p":"com.lightningrobotics.common.command.core","c":"StatefulCommand","l":"default_action"},{"p":"com.lightningrobotics.common.command.core","c":"DeleteLogCommand","l":"DeleteLogCommand(int)","url":"%3Cinit%3E(int)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"deltaThetaInDegrees(double, double)","url":"deltaThetaInDegrees(double,double)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"deltaThetaInRadians(double, double)","url":"deltaThetaInRadians(double,double)"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest","l":"didPass()"},{"p":"com.lightningrobotics.common.controller","c":"DiffDriveController","l":"DiffDriveController()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.controller","c":"DiffDriveController","l":"DiffDriveController(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"DifferentialDrivetrain(DifferentialGains, MotorController[], MotorController[], LightningIMU, DoubleSupplier, DoubleSupplier, DoubleSupplier, DoubleSupplier)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.differential.DifferentialGains,edu.wpi.first.wpilibj.motorcontrol.MotorController[],edu.wpi.first.wpilibj.motorcontrol.MotorController[],com.lightningrobotics.common.subsystem.core.LightningIMU,java.util.function.DoubleSupplier,java.util.function.DoubleSupplier,java.util.function.DoubleSupplier,java.util.function.DoubleSupplier)"},{"p":"com.lightningrobotics.common.geometry.kinematics.differential","c":"DifferentialDrivetrainState","l":"DifferentialDrivetrainState(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialGains","l":"DifferentialGains()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialGains","l":"DifferentialGains(double, double, double, boolean[], boolean[], PIDFController, FeedForwardController)","url":"%3Cinit%3E(double,double,double,boolean[],boolean[],com.lightningrobotics.common.controller.PIDFController,com.lightningrobotics.common.controller.FeedForwardController)"},{"p":"com.lightningrobotics.common.geometry.kinematics.differential","c":"DifferentialKinematics","l":"DifferentialKinematics(DifferentialGains)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.differential.DifferentialGains)"},{"p":"com.lightningrobotics.common.command.drivetrain.differential","c":"DifferentialTankDrive","l":"DifferentialTankDrive(DifferentialDrivetrain, DoubleSupplier, DoubleSupplier, JoystickFilter)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.differential.DifferentialDrivetrain,java.util.function.DoubleSupplier,java.util.function.DoubleSupplier,com.lightningrobotics.common.util.filter.JoystickFilter)"},{"p":"com.lightningrobotics.common.command.drivetrain.differential","c":"DifferentialTankDrive","l":"DifferentialTankDrive(DifferentialDrivetrain, DoubleSupplier, DoubleSupplier)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.differential.DifferentialDrivetrain,java.util.function.DoubleSupplier,java.util.function.DoubleSupplier)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"disableContinuousInput()"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"disabledInit()"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"disabledPeriodic()"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest.Priority","l":"DO_FIRST"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest.Priority","l":"DONT_CARE"},{"p":"com.lightningrobotics.common.logging","c":"CommandLogger","l":"drain()"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"drain()"},{"p":"com.lightningrobotics.common.geometry.kinematics","c":"DrivetrainSpeed","l":"DrivetrainSpeed()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.geometry.kinematics","c":"DrivetrainSpeed","l":"DrivetrainSpeed(double, double, double)","url":"%3Cinit%3E(double,double,double)"},{"p":"com.lightningrobotics.common.geometry.kinematics","c":"DrivetrainState","l":"DrivetrainState()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.fault","c":"FaultCode","l":"dummyLightOn()"},{"p":"com.lightningrobotics.common.fault","c":"FaultCode","l":"eachCode(BiConsumer<LightningFaultCodes.Code, Boolean>)","url":"eachCode(java.util.function.BiConsumer)"},{"p":"com.lightningrobotics.common.util.operator.trigger","c":"EitherButtonTrigger","l":"EitherButtonTrigger(JoystickButton, JoystickButton)","url":"%3Cinit%3E(edu.wpi.first.wpilibj2.command.button.JoystickButton,edu.wpi.first.wpilibj2.command.button.JoystickButton)"},{"p":"com.lightningrobotics.common.testing","c":"AbstractTimedSystemTest","l":"elapsed()"},{"p":"com.lightningrobotics.common.controller","c":"Controller","l":"enableContinuousInput(double, double)","url":"enableContinuousInput(double,double)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"enableContinuousInput(double, double)","url":"enableContinuousInput(double,double)"},{"p":"com.lightningrobotics.common.command.core","c":"DeleteLogCommand","l":"end(boolean)"},{"p":"com.lightningrobotics.common.command.core","c":"LogCommand","l":"end(boolean)"},{"p":"com.lightningrobotics.common.command.core","c":"LoggedCommand","l":"end(boolean)"},{"p":"com.lightningrobotics.common.command.core","c":"TimedCommand","l":"end(boolean)"},{"p":"com.lightningrobotics.common.command.drivetrain.differential","c":"DifferentialTankDrive","l":"end(boolean)"},{"p":"com.lightningrobotics.common.command.drivetrain.differential","c":"FollowTrajectory","l":"end(boolean)"},{"p":"com.lightningrobotics.common.command.drivetrain.swerve","c":"SwerveDriveCommand","l":"end(boolean)"},{"p":"com.lightningrobotics.common.testing","c":"SystemTestCommand","l":"end(boolean)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"Trajectory","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryState","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU.IMUFunction","l":"exec()"},{"p":"com.lightningrobotics.common.command.core","c":"DeleteLogCommand","l":"execute()"},{"p":"com.lightningrobotics.common.command.core","c":"LogCommand","l":"execute()"},{"p":"com.lightningrobotics.common.command.core","c":"LoggedCommand","l":"execute()"},{"p":"com.lightningrobotics.common.command.core","c":"StatefulCommand","l":"execute()"},{"p":"com.lightningrobotics.common.command.core","c":"TimedCommand","l":"execute()"},{"p":"com.lightningrobotics.common.command.drivetrain.differential","c":"DifferentialTankDrive","l":"execute()"},{"p":"com.lightningrobotics.common.command.drivetrain.differential","c":"FollowTrajectory","l":"execute()"},{"p":"com.lightningrobotics.common.command.drivetrain.swerve","c":"SwerveDriveCommand","l":"execute()"},{"p":"com.lightningrobotics.common.testing","c":"SystemTestCommand","l":"execute()"},{"p":"com.lightningrobotics.common.fault","c":"AbstractFaultMonitor","l":"fatal"},{"p":"com.lightningrobotics.common.fault","c":"FaultCode","l":"FaultCode()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.command.core","c":"FaultCommand","l":"FaultCommand(LightningFaultCodes.Code)","url":"%3Cinit%3E(com.lightningrobotics.common.fault.LightningFaultCodes.Code)"},{"p":"com.lightningrobotics.common.fault","c":"FaultMonitor","l":"FaultMonitor(LightningFaultCodes.Code, BooleanSupplier, String, boolean)","url":"%3Cinit%3E(com.lightningrobotics.common.fault.LightningFaultCodes.Code,java.util.function.BooleanSupplier,java.lang.String,boolean)"},{"p":"com.lightningrobotics.common.fault","c":"FaultMonitor","l":"FaultMonitor(LightningFaultCodes.Code, BooleanSupplier, String)","url":"%3Cinit%3E(com.lightningrobotics.common.fault.LightningFaultCodes.Code,java.util.function.BooleanSupplier,java.lang.String)"},{"p":"com.lightningrobotics.common.fault","c":"FaultMonitor","l":"FaultMonitor(LightningFaultCodes.Code, BooleanSupplier)","url":"%3Cinit%3E(com.lightningrobotics.common.fault.LightningFaultCodes.Code,java.util.function.BooleanSupplier)"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"FeedForwardController(double, double, double)","url":"%3Cinit%3E(double,double,double)"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"FeedForwardController(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter","l":"filter(double)"},{"p":"com.lightningrobotics.common.util.filter","c":"KalmanFilter","l":"filter(double)"},{"p":"com.lightningrobotics.common.util.filter","c":"MovingAverageFilter","l":"filter(double)"},{"p":"com.lightningrobotics.common.util.filter","c":"ValueFilter","l":"filter(double)"},{"p":"com.lightningrobotics.common.logging","c":"CommandLogger","l":"flush()"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"flush()"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"flush()"},{"p":"com.lightningrobotics.common.command.drivetrain.differential","c":"FollowTrajectory","l":"FollowTrajectory(Trajectory, Supplier<Pose2d>, DiffDriveController, FeedForwardController, DifferentialKinematics, Supplier<DifferentialDrivetrainState>, PIDFController, PIDFController, BiConsumer<Double, Double>, Subsystem...)","url":"%3Cinit%3E(com.lightningrobotics.common.auto.trajectory.Trajectory,java.util.function.Supplier,com.lightningrobotics.common.controller.DiffDriveController,com.lightningrobotics.common.controller.FeedForwardController,com.lightningrobotics.common.geometry.kinematics.differential.DifferentialKinematics,java.util.function.Supplier,com.lightningrobotics.common.controller.PIDFController,com.lightningrobotics.common.controller.PIDFController,java.util.function.BiConsumer,edu.wpi.first.wpilibj2.command.Subsystem...)"},{"p":"com.lightningrobotics.common.geometry.kinematics","c":"LightningKinematics","l":"forward(DrivetrainState)","url":"forward(com.lightningrobotics.common.geometry.kinematics.DrivetrainState)"},{"p":"com.lightningrobotics.common.geometry.kinematics.differential","c":"DifferentialKinematics","l":"forward(DrivetrainState)","url":"forward(com.lightningrobotics.common.geometry.kinematics.DrivetrainState)"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveKinematics","l":"forward(DrivetrainState)","url":"forward(com.lightningrobotics.common.geometry.kinematics.DrivetrainState)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"Trajectory","l":"from(List<Pose2d>, TrajectoryConfig)","url":"from(java.util.List,com.lightningrobotics.common.auto.trajectory.TrajectoryConfig)"},{"p":"com.lightningrobotics.common.geometry.kinematics","c":"DrivetrainSpeed","l":"fromFieldCentricSpeed(double, double, double, Rotation2d)","url":"fromFieldCentricSpeed(double,double,double,edu.wpi.first.math.geometry.Rotation2d)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain.Modules","l":"FRONT_LEFT"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain.Modules","l":"FRONT_RIGHT"},{"p":"com.lightningrobotics.common.logging","c":"LoggerValue","l":"get()"},{"p":"com.lightningrobotics.common.util.filter","c":"KalmanFilter","l":"get()"},{"p":"com.lightningrobotics.common.util.filter","c":"MovingAverageFilter","l":"get()"},{"p":"com.lightningrobotics.common.util.filter","c":"ValueFilter","l":"get()"},{"p":"com.lightningrobotics.common.util.operator.trigger","c":"EitherButtonTrigger","l":"get()"},{"p":"com.lightningrobotics.common.util.operator.trigger","c":"TwoButtonTrigger","l":"get()"},{"p":"com.lightningrobotics.common.util","c":"InterpolationMap","l":"get(double)"},{"p":"com.lightningrobotics.common.logging","c":"DataLoggerOutOfBand","l":"getAsDouble()"},{"p":"com.lightningrobotics.common.logging","c":"LoggerValue","l":"getAsDouble()"},{"p":"com.lightningrobotics.common.auto","c":"Autonomous","l":"getAutonomous()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveModule","l":"getAzimuthMotor()"},{"p":"com.lightningrobotics.common.command.core","c":"StatefulCommand","l":"getCallingState()"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest","l":"getCode()"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes","l":"getCodes()"},{"p":"com.lightningrobotics.common.auto","c":"Path","l":"getCommand(LightningDrivetrain)","url":"getCommand(com.lightningrobotics.common.subsystem.drivetrain.LightningDrivetrain)"},{"p":"com.lightningrobotics.common.auto","c":"Autonomous","l":"getCommands()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"getConstraints()"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"getContainer()"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"getD()"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter","l":"getDeadband()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveModule","l":"getDriveMotor()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"getDriveMotorInverts()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"getDrivePIDFController()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningDrivetrain","l":"getDriveState()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"getDriveState()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain","l":"getDriveState()"},{"p":"com.lightningrobotics.common","c":"LightningContainer","l":"getDrivetrain()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"getDriveTrainState()"},{"p":"com.lightningrobotics.common.auto","c":"Path","l":"getDuration(LightningDrivetrain)","url":"getDuration(com.lightningrobotics.common.subsystem.drivetrain.LightningDrivetrain)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"getEndVelocity()"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes","l":"getFaultCode(String)","url":"getFaultCode(java.lang.String)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"getFeedForwardController()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialGains","l":"getFeedForwardController()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningDrivetrain","l":"getGains()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"getGains()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain","l":"getGains()"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"getHeader()"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU","l":"getHeading()"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"getI()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"Trajectory","l":"getInitialPose()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningGains","l":"getKinematics()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialGains","l":"getKinematics()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialGains","l":"getLeftInverts()"},{"p":"com.lightningrobotics.common.geometry.kinematics.differential","c":"DifferentialDrivetrainState","l":"getLeftSpeed()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"getLength()"},{"p":"com.lightningrobotics.common.command.core","c":"DeleteLogCommand","l":"getLogAmount()"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"getLogger()"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"getLogWriter()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"getMaxAcceleration()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningGains","l":"getMaxAcceleration()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"getMaxAngularSpeed()"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter","l":"getMaxPower()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"getMaxRealSpeed()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningGains","l":"getMaxSpeed()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"getMaxVelocity()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConstraint","l":"getMaxVelocityMetersPerSecond(Pose2d, double, double)","url":"getMaxVelocityMetersPerSecond(edu.wpi.first.math.geometry.Pose2d,double,double)"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest","l":"getMessage()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConstraint","l":"getMinMaxAccelerationMetersPerSecondSq(Pose2d, double, double)","url":"getMinMaxAccelerationMetersPerSecondSq(edu.wpi.first.math.geometry.Pose2d,double,double)"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter","l":"getMinPower()"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter","l":"getMode()"},{"p":"com.lightningrobotics.common.fault","c":"FaultCode","l":"getModel()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveModule","l":"getModuleAngle()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain.Modules","l":"getModuleID()"},{"p":"com.lightningrobotics.common.auto","c":"Path","l":"getName()"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes.Code","l":"getName()"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"getP()"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"getPeriod()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialGains","l":"getPIDFController()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningDrivetrain","l":"getPose()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"getPose()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain","l":"getPose()"},{"p":"com.lightningrobotics.common.geometry","c":"LightningOdometer","l":"getPoseMeters()"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"getPositionError()"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest","l":"getPriority()"},{"p":"com.lightningrobotics.common.auto","c":"Path","l":"getReversed()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialGains","l":"getRightInverts()"},{"p":"com.lightningrobotics.common.geometry.kinematics.differential","c":"DifferentialDrivetrainState","l":"getRightSpeed()"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"getSetpoint()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"getStartVelocity()"},{"p":"com.lightningrobotics.common.command.core","c":"StatefulCommand","l":"getState()"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes.Code","l":"getState()"},{"p":"com.lightningrobotics.common.geometry.kinematics","c":"DrivetrainState","l":"getState()"},{"p":"com.lightningrobotics.common.geometry.kinematics.differential","c":"DifferentialDrivetrainState","l":"getState()"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveDrivetrainState","l":"getState()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveModule","l":"getState()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"Trajectory","l":"getStates()"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveDrivetrainState","l":"getStates()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"Trajectory","l":"getTotalTimeSeconds()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningGains","l":"getTrackWidth()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialGains","l":"getTrackWidth()"},{"p":"com.lightningrobotics.common.auto","c":"Path","l":"getTrajectory(LightningDrivetrain)","url":"getTrajectory(com.lightningrobotics.common.subsystem.drivetrain.LightningDrivetrain)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"getTurnMotorInverts()"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU","l":"getType()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveModule","l":"getVelocity()"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"getVelocityError()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"getWidth()"},{"p":"com.lightningrobotics.common.auto","c":"Autonomous","l":"hasDashboardWaitCommand()"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU","l":"heading()"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest.Priority","l":"HIGH"},{"p":"com.lightningrobotics.common.fault","c":"FaultCode","l":"init()"},{"p":"com.lightningrobotics.common.command.core","c":"DeleteLogCommand","l":"initialize()"},{"p":"com.lightningrobotics.common.command.core","c":"FaultCommand","l":"initialize()"},{"p":"com.lightningrobotics.common.command.core","c":"LogCommand","l":"initialize()"},{"p":"com.lightningrobotics.common.command.core","c":"LoggedCommand","l":"initialize()"},{"p":"com.lightningrobotics.common.command.core","c":"StatefulCommand","l":"initialize()"},{"p":"com.lightningrobotics.common.command.core","c":"TimedCommand","l":"initialize()"},{"p":"com.lightningrobotics.common.command.core","c":"WaitCommand","l":"initialize()"},{"p":"com.lightningrobotics.common.command.drivetrain.differential","c":"FollowTrajectory","l":"initialize()"},{"p":"com.lightningrobotics.common.testing","c":"AbstractTimedSystemTest","l":"initialize()"},{"p":"com.lightningrobotics.common.testing","c":"SystemTestCommand","l":"initialize()"},{"p":"com.lightningrobotics.common","c":"LightningContainer","l":"initializeDashboardCommands()"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"initSendable(SendableBuilder)","url":"initSendable(edu.wpi.first.util.sendable.SendableBuilder)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"inputModulus(double, double, double)","url":"inputModulus(double,double,double)"},{"p":"com.lightningrobotics.common.util","c":"InterpolationMap","l":"InterpolationMap()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.util","c":"InterpolationMap","l":"InterpolationMap(double...)","url":"%3Cinit%3E(double...)"},{"p":"com.lightningrobotics.common.util","c":"InterpolationMap","l":"InterpolationMap(Double[])","url":"%3Cinit%3E(java.lang.Double[])"},{"p":"com.lightningrobotics.common.geometry.kinematics","c":"LightningKinematics","l":"inverse(DrivetrainSpeed)","url":"inverse(com.lightningrobotics.common.geometry.kinematics.DrivetrainSpeed)"},{"p":"com.lightningrobotics.common.geometry.kinematics.differential","c":"DifferentialKinematics","l":"inverse(DrivetrainSpeed)","url":"inverse(com.lightningrobotics.common.geometry.kinematics.DrivetrainSpeed)"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveKinematics","l":"inverse(DrivetrainSpeed)","url":"inverse(com.lightningrobotics.common.geometry.kinematics.DrivetrainSpeed)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"isContinuousInputEnabled()"},{"p":"com.lightningrobotics.common.command.core","c":"DeleteLogCommand","l":"isFinished()"},{"p":"com.lightningrobotics.common.command.core","c":"LogCommand","l":"isFinished()"},{"p":"com.lightningrobotics.common.command.core","c":"StatefulCommand","l":"isFinished()"},{"p":"com.lightningrobotics.common.command.core","c":"TimedCommand","l":"isFinished()"},{"p":"com.lightningrobotics.common.command.core","c":"WaitCommand","l":"isFinished()"},{"p":"com.lightningrobotics.common.command.drivetrain.differential","c":"FollowTrajectory","l":"isFinished()"},{"p":"com.lightningrobotics.common.testing","c":"AbstractTimedSystemTest","l":"isFinished()"},{"p":"com.lightningrobotics.common.testing","c":"SystemTestCommand","l":"isFinished()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"isReversed()"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"isValid()"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter","l":"JoystickFilter(double, double, double, JoystickFilter.Mode)","url":"%3Cinit%3E(double,double,double,com.lightningrobotics.common.util.filter.JoystickFilter.Mode)"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"ka"},{"p":"com.lightningrobotics.common.util.filter","c":"KalmanFilter","l":"KalmanFilter()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.util.filter","c":"KalmanFilter","l":"KalmanFilter(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"ks"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"kv"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"lerp(double, double, double)","url":"lerp(double,double,double)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"lerp(Pose2d, Pose2d, double)","url":"lerp(edu.wpi.first.math.geometry.Pose2d,edu.wpi.first.math.geometry.Pose2d,double)"},{"p":"com.lightningrobotics.common","c":"LightningContainer","l":"LightningContainer()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningCore","l":"LightningCore()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningDrivetrain","l":"LightningDrivetrain()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes","l":"LightningFaultCodes()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningGains","l":"LightningGains()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningGains","l":"LightningGains(double, double)","url":"%3Cinit%3E(double,double)"},{"p":"com.lightningrobotics.common.geometry","c":"LightningOdometer","l":"LightningOdometer(Rotation2d, Pose2d)","url":"%3Cinit%3E(edu.wpi.first.math.geometry.Rotation2d,edu.wpi.first.math.geometry.Pose2d)"},{"p":"com.lightningrobotics.common.geometry","c":"LightningOdometer","l":"LightningOdometer(Rotation2d)","url":"%3Cinit%3E(edu.wpi.first.math.geometry.Rotation2d)"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"LightningRobot(LightningContainer)","url":"%3Cinit%3E(com.lightningrobotics.common.LightningContainer)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"limit(double, double, double)","url":"limit(double,double,double)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"limit(double, double)","url":"limit(double,double)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"limit(double)"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter.Mode","l":"LINEAR"},{"p":"com.lightningrobotics.common.auto","c":"Autonomous","l":"load()"},{"p":"com.lightningrobotics.common.logging","c":"CrashTracker","l":"logAutoInit()"},{"p":"com.lightningrobotics.common.command.core","c":"LogCommand","l":"LogCommand(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.lightningrobotics.common.command.core","c":"LogCommand","l":"LogCommand(Supplier<String>)","url":"%3Cinit%3E(java.util.function.Supplier)"},{"p":"com.lightningrobotics.common.logging","c":"CrashTracker","l":"logCompetitionStart()"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"logData()"},{"p":"com.lightningrobotics.common.logging","c":"CrashTracker","l":"logDisabledInit()"},{"p":"com.lightningrobotics.common.command.core","c":"LoggedCommand","l":"LoggedCommand()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.command.core","c":"LoggedCommand","l":"logger"},{"p":"com.lightningrobotics.common.logging","c":"LoggerValue","l":"LoggerValue()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.logging","c":"LoggerValue","l":"LoggerValue(double)","url":"%3Cinit%3E(double)"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"logRawString(String)","url":"logRawString(java.lang.String)"},{"p":"com.lightningrobotics.common.logging","c":"CrashTracker","l":"logRobotConstruction()"},{"p":"com.lightningrobotics.common.logging","c":"CrashTracker","l":"logRobotInit()"},{"p":"com.lightningrobotics.common.logging","c":"CrashTracker","l":"logRobotStartup()"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"logString(String)","url":"logString(java.lang.String)"},{"p":"com.lightningrobotics.common.logging","c":"CrashTracker","l":"logTeleopInit()"},{"p":"com.lightningrobotics.common.logging","c":"CrashTracker","l":"logTestInit()"},{"p":"com.lightningrobotics.common.logging","c":"CrashTracker","l":"logThrowableCrash(Throwable)","url":"logThrowableCrash(java.lang.Throwable)"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"LogWriter(String, int)","url":"%3Cinit%3E(java.lang.String,int)"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"LogWriter(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest.Priority","l":"LOW"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningGains","l":"MAX_VOLTAGE"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"max(double...)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConstraint.AccelerationLimit","l":"maxAccelerationMetersPerSecondSq"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"maxAchievableAcceleration(double, double)","url":"maxAchievableAcceleration(double,double)"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"maxAchievableVelocity(double, double)","url":"maxAchievableVelocity(double,double)"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest.Priority","l":"MED"},{"p":"com.lightningrobotics.common.command.core","c":"StatefulCommand","l":"methodName(Enum<?>)","url":"methodName(java.lang.Enum)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConstraint.AccelerationLimit","l":"minAccelerationMetersPerSecondSq"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"minAchievableAcceleration(double, double)","url":"minAchievableAcceleration(double,double)"},{"p":"com.lightningrobotics.common.controller","c":"FeedForwardController","l":"minAchievableVelocity(double, double)","url":"minAchievableVelocity(double,double)"},{"p":"com.lightningrobotics.common.util.filter","c":"MovingAverageFilter","l":"MovingAverageFilter(int)","url":"%3Cinit%3E(int)"},{"p":"com.lightningrobotics.common.fault","c":"AbstractFaultMonitor","l":"msg"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU.IMUType","l":"NAVX"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU","l":"navX()"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU.IMUType","l":"NONE"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU","l":"none()"},{"p":"com.lightningrobotics.common.geometry.kinematics","c":"DrivetrainSpeed","l":"omega"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"onLoop()"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"onLoop()"},{"p":"com.lightningrobotics.common.util","c":"Loop","l":"onLoop()"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"onStart()"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"onStart()"},{"p":"com.lightningrobotics.common.util","c":"Loop","l":"onStart()"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"onStop()"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"onStop()"},{"p":"com.lightningrobotics.common.util","c":"Loop","l":"onStop()"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveModuleState","l":"optimize(SwerveModuleState, Rotation2d)","url":"optimize(com.lightningrobotics.common.geometry.kinematics.swerve.SwerveModuleState,edu.wpi.first.math.geometry.Rotation2d)"},{"p":"com.lightningrobotics.common.auto","c":"Path","l":"Path(List<Pose2d>, boolean)","url":"%3Cinit%3E(java.util.List,boolean)"},{"p":"com.lightningrobotics.common.auto","c":"Path","l":"Path(List<Pose2d>)","url":"%3Cinit%3E(java.util.List)"},{"p":"com.lightningrobotics.common.auto","c":"Path","l":"Path(String, boolean)","url":"%3Cinit%3E(java.lang.String,boolean)"},{"p":"com.lightningrobotics.common.auto","c":"Path","l":"Path(String, List<Pose2d>, boolean)","url":"%3Cinit%3E(java.lang.String,java.util.List,boolean)"},{"p":"com.lightningrobotics.common.auto","c":"Path","l":"Path(String, List<Pose2d>)","url":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU","l":"periodic()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"PIDFDashboardTuner","l":"periodic()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"periodic()"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"PIDFController(double, double, double, double)","url":"%3Cinit%3E(double,double,double,double)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"PIDFController(double, double, double)","url":"%3Cinit%3E(double,double,double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"PIDFDashboardTuner","l":"PIDFDashboardTuner(String, PIDFController, String)","url":"%3Cinit%3E(java.lang.String,com.lightningrobotics.common.controller.PIDFController,java.lang.String)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"PIDFDashboardTuner","l":"PIDFDashboardTuner(String, PIDFController)","url":"%3Cinit%3E(java.lang.String,com.lightningrobotics.common.controller.PIDFController)"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU.IMUType","l":"PIGEON"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU","l":"pigeon(int)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryState","l":"poseMeters"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"preventNewDataElements()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain.Modules","l":"REAR_LEFT"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain.Modules","l":"REAR_RIGHT"},{"p":"com.lightningrobotics.common.fault","c":"FaultMonitor","l":"register(AbstractFaultMonitor)","url":"register(com.lightningrobotics.common.fault.AbstractFaultMonitor)"},{"p":"com.lightningrobotics.common.auto","c":"Autonomous","l":"register(String, Command)","url":"register(java.lang.String,edu.wpi.first.wpilibj2.command.Command)"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest","l":"register(SystemTest)","url":"register(com.lightningrobotics.common.testing.SystemTest)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"Trajectory","l":"relativeTo(Pose2d)","url":"relativeTo(edu.wpi.first.math.geometry.Pose2d)"},{"p":"com.lightningrobotics.common","c":"LightningContainer","l":"releaseDefaultCommands()"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"reset_file()"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"reset()"},{"p":"com.lightningrobotics.common.logging","c":"CommandLogger","l":"reset()"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU","l":"reset()"},{"p":"com.lightningrobotics.common.testing","c":"SystemTestCommand","l":"reset()"},{"p":"com.lightningrobotics.common.util.filter","c":"KalmanFilter","l":"reset()"},{"p":"com.lightningrobotics.common.util.filter","c":"MovingAverageFilter","l":"reset()"},{"p":"com.lightningrobotics.common.util.filter","c":"ValueFilter","l":"reset()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"resetPose()"},{"p":"com.lightningrobotics.common.geometry","c":"LightningOdometer","l":"resetPosition(Pose2d, Rotation2d)","url":"resetPosition(edu.wpi.first.math.geometry.Pose2d,edu.wpi.first.math.geometry.Rotation2d)"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"robotBackgroundPeriodic()"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"robotInit()"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"robotLowPriorityPeriodic()"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"robotMediumPriorityPeriodic()"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"robotPeriodic()"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"rpmToMetersPerSecond(double, double, double)","url":"rpmToMetersPerSecond(double,double,double)"},{"p":"com.lightningrobotics.common.logging","c":"CrashTrackingRunnable","l":"run()"},{"p":"com.lightningrobotics.common.logging","c":"CrashTrackingRunnable","l":"runCrashTracked()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"Trajectory","l":"sample(double)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"scale(double, double, double, double, double)","url":"scale(double,double,double,double,double)"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"scale(int, int, int, int, int)","url":"scale(int,int,int,int,int)"},{"p":"com.lightningrobotics.common.logging","c":"LoggerValue","l":"set(double)"},{"p":"com.lightningrobotics.common.logging","c":"CommandLogger","l":"set(String, double)","url":"set(java.lang.String,double)"},{"p":"com.lightningrobotics.common.logging","c":"CommandLogger","l":"set(String, String)","url":"set(java.lang.String,java.lang.String)"},{"p":"com.lightningrobotics.common.logging","c":"DataLogger","l":"setBaseFileName(String)","url":"setBaseFileName(java.lang.String)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"setD(double)"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter","l":"setDeadband(double)"},{"p":"com.lightningrobotics.common.command.core","c":"StatefulCommand","l":"setDefaultAction(Runnable)","url":"setDefaultAction(java.lang.Runnable)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"setDriveMotorInverts(boolean[])"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningDrivetrain","l":"setDriveSpeed(DrivetrainSpeed)","url":"setDriveSpeed(com.lightningrobotics.common.geometry.kinematics.DrivetrainSpeed)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"setDriveSpeed(DrivetrainSpeed)","url":"setDriveSpeed(com.lightningrobotics.common.geometry.kinematics.DrivetrainSpeed)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain","l":"setDriveSpeed(DrivetrainSpeed)","url":"setDriveSpeed(com.lightningrobotics.common.geometry.kinematics.DrivetrainSpeed)"},{"p":"com.lightningrobotics.common.controller","c":"DiffDriveController","l":"setEnabled(boolean)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"setEndVelocity(double)"},{"p":"com.lightningrobotics.common.logging","c":"LogWriter","l":"setFileName(String)","url":"setFileName(java.lang.String)"},{"p":"com.lightningrobotics.common.auto","c":"Autonomous","l":"setHasDashboardWaitCommand(boolean)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"setI(double)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"setIntegratorRange(double, double)","url":"setIntegratorRange(double,double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningGains","l":"setKinematics(LightningKinematics)","url":"setKinematics(com.lightningrobotics.common.geometry.kinematics.LightningKinematics)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialGains","l":"setLeftInverts(boolean[])"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"setLeftOutput(double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"setLength(double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningGains","l":"setMaxAcceleration(double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"setMaxAngularSpeed(double)"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter","l":"setMaxPower(double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"setMaxRealSpeed(double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningGains","l":"setMaxSpeed(double)"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter","l":"setMinPower(double)"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter","l":"setMode(JoystickFilter.Mode)","url":"setMode(com.lightningrobotics.common.util.filter.JoystickFilter.Mode)"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes.Code","l":"setName(String)","url":"setName(java.lang.String)"},{"p":"com.lightningrobotics.common.fault","c":"FaultCode","l":"setNetworkTableEntry(LightningFaultCodes.Code, NetworkTableEntry)","url":"setNetworkTableEntry(com.lightningrobotics.common.fault.LightningFaultCodes.Code,edu.wpi.first.networktables.NetworkTableEntry)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"setP(double)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"setPID(double, double, double)","url":"setPID(double,double,double)"},{"p":"com.lightningrobotics.common.geometry","c":"LightningOdometer","l":"setPose(Pose2d)","url":"setPose(edu.wpi.first.math.geometry.Pose2d)"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter","l":"setRampDelta(double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveModule","l":"setRawAzimuthPower(double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveModule","l":"setRawDrivePower(double)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"setReversed(boolean)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialGains","l":"setRightInverts(boolean[])"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"setRightOutput(double)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"setSetpoint(double)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"setStartVelocity(double)"},{"p":"com.lightningrobotics.common.fault","c":"LightningFaultCodes.Code","l":"setState(boolean)"},{"p":"com.lightningrobotics.common.command.core","c":"StatefulCommand","l":"setState(Enum<?>)","url":"setState(java.lang.Enum)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveModule","l":"setState(SwerveModuleState)","url":"setState(com.lightningrobotics.common.geometry.kinematics.swerve.SwerveModuleState)"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveDrivetrainState","l":"setStates(SwerveModuleState[])","url":"setStates(com.lightningrobotics.common.geometry.kinematics.swerve.SwerveModuleState[])"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"setTolerance(double, double)","url":"setTolerance(double,double)"},{"p":"com.lightningrobotics.common.controller","c":"PIDFController","l":"setTolerance(double)"},{"p":"com.lightningrobotics.common.controller","c":"DiffDriveController","l":"setTolerance(Pose2d)","url":"setTolerance(edu.wpi.first.math.geometry.Pose2d)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialGains","l":"setTrackWidth(int)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"setTurnMotorInverts(boolean[])"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"setVoltage(double, double)","url":"setVoltage(double,double)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"setWidth(double)"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter.Mode","l":"SQUARED"},{"p":"com.lightningrobotics.common.command.core","c":"StatefulCommand","l":"StatefulCommand(Enum<?>)","url":"%3Cinit%3E(java.lang.Enum)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain","c":"LightningDrivetrain","l":"stop()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"stop()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain","l":"stop()"},{"p":"com.lightningrobotics.common.command.drivetrain.swerve","c":"SwerveDriveCommand","l":"SwerveDriveCommand(SwerveDrivetrain, LightningIMU, XboxController, boolean, JoystickFilter)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.swerve.SwerveDrivetrain,com.lightningrobotics.common.subsystem.core.LightningIMU,edu.wpi.first.wpilibj.XboxController,boolean,com.lightningrobotics.common.util.filter.JoystickFilter)"},{"p":"com.lightningrobotics.common.command.drivetrain.swerve","c":"SwerveDriveCommand","l":"SwerveDriveCommand(SwerveDrivetrain, LightningIMU, XboxController, boolean)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.swerve.SwerveDrivetrain,com.lightningrobotics.common.subsystem.core.LightningIMU,edu.wpi.first.wpilibj.XboxController,boolean)"},{"p":"com.lightningrobotics.common.command.drivetrain.swerve","c":"SwerveDriveCommand","l":"SwerveDriveCommand(SwerveDrivetrain, LightningIMU, XboxController)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.swerve.SwerveDrivetrain,com.lightningrobotics.common.subsystem.core.LightningIMU,edu.wpi.first.wpilibj.XboxController)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain","l":"SwerveDrivetrain(SwerveGains, SwerveModule...)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.swerve.SwerveGains,com.lightningrobotics.common.subsystem.drivetrain.swerve.SwerveModule...)"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveDrivetrainState","l":"SwerveDrivetrainState(SwerveModuleState[])","url":"%3Cinit%3E(com.lightningrobotics.common.geometry.kinematics.swerve.SwerveModuleState[])"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"SwerveGains()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveGains","l":"SwerveGains(double, double, double, double, double, double, boolean[], boolean[])","url":"%3Cinit%3E(double,double,double,double,double,double,boolean[],boolean[])"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveKinematics","l":"SwerveKinematics(SwerveGains)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.swerve.SwerveGains)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveModule","l":"SwerveModule(SwerveGains, MotorController, MotorController, Supplier<Rotation2d>, DoubleSupplier, PIDFController, PIDFController)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.swerve.SwerveGains,edu.wpi.first.wpilibj.motorcontrol.MotorController,edu.wpi.first.wpilibj.motorcontrol.MotorController,java.util.function.Supplier,java.util.function.DoubleSupplier,com.lightningrobotics.common.controller.PIDFController,com.lightningrobotics.common.controller.PIDFController)"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveModuleState","l":"SwerveModuleState(double, Rotation2d)","url":"%3Cinit%3E(double,edu.wpi.first.math.geometry.Rotation2d)"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest","l":"SystemTest(String, LightningFaultCodes.Code, SystemTest.Priority)","url":"%3Cinit%3E(java.lang.String,com.lightningrobotics.common.fault.LightningFaultCodes.Code,com.lightningrobotics.common.testing.SystemTest.Priority)"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest","l":"SystemTest(String, LightningFaultCodes.Code)","url":"%3Cinit%3E(java.lang.String,com.lightningrobotics.common.fault.LightningFaultCodes.Code)"},{"p":"com.lightningrobotics.common.testing","c":"SystemTestCommand","l":"SystemTestCommand()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"tankDrive(double, double)","url":"tankDrive(double,double)"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"teleopInit()"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"testInit()"},{"p":"com.lightningrobotics.common","c":"LightningRobot","l":"testPeriodic()"},{"p":"com.lightningrobotics.common.util","c":"LightningMath","l":"ticksToDistance(double, double, double, double)","url":"ticksToDistance(double,double,double,double)"},{"p":"com.lightningrobotics.common.command.core","c":"TimedCommand","l":"TimedCommand(Command, double)","url":"%3Cinit%3E(edu.wpi.first.wpilibj2.command.Command,double)"},{"p":"com.lightningrobotics.common.fault","c":"TimedFaultMonitor","l":"TimedFaultMonitor(LightningFaultCodes.Code, BooleanSupplier, double, String)","url":"%3Cinit%3E(com.lightningrobotics.common.fault.LightningFaultCodes.Code,java.util.function.BooleanSupplier,double,java.lang.String)"},{"p":"com.lightningrobotics.common.command.core","c":"TimedCommand","l":"timeout"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryInterpolater","l":"timeParameterizeTrajectory(List<PoseWithCurvature>, List<TrajectoryConstraint>, double, double, double, double, boolean)","url":"timeParameterizeTrajectory(java.util.List,java.util.List,double,double,double,double,boolean)"},{"p":"com.lightningrobotics.common.command.core","c":"TimedCommand","l":"timer"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryState","l":"timeSeconds"},{"p":"com.lightningrobotics.common.fault","c":"FaultCode","l":"toJSONString()"},{"p":"com.lightningrobotics.common.geometry.kinematics","c":"DrivetrainSpeed","l":"toString()"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveModuleState","l":"toString()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"Trajectory","l":"Trajectory()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"Trajectory","l":"Trajectory(List<TrajectoryState>)","url":"%3Cinit%3E(java.util.List)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"TrajectoryConfig(LightningDrivetrain, boolean)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.LightningDrivetrain,boolean)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryConfig","l":"TrajectoryConfig(LightningDrivetrain)","url":"%3Cinit%3E(com.lightningrobotics.common.subsystem.drivetrain.LightningDrivetrain)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryInterpolater.TrajectoryGenerationException","l":"TrajectoryGenerationException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryState","l":"TrajectoryState()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryState","l":"TrajectoryState(double, double, double, Pose2d, double)","url":"%3Cinit%3E(double,double,double,edu.wpi.first.math.geometry.Pose2d,double)"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"Trajectory","l":"transformBy(Transform2d)","url":"transformBy(edu.wpi.first.math.geometry.Transform2d)"},{"p":"com.lightningrobotics.common.fault","c":"AbstractFaultMonitor","l":"trigger()"},{"p":"com.lightningrobotics.common.util.operator.trigger","c":"TwoButtonTrigger","l":"TwoButtonTrigger(JoystickButton, JoystickButton)","url":"%3Cinit%3E(edu.wpi.first.wpilibj2.command.button.JoystickButton,edu.wpi.first.wpilibj2.command.button.JoystickButton)"},{"p":"com.lightningrobotics.common.fault","c":"UnchangingFaultMonitor","l":"UnchangingFaultMonitor(LightningFaultCodes.Code, DoubleSupplier, double, double, String)","url":"%3Cinit%3E(com.lightningrobotics.common.fault.LightningFaultCodes.Code,java.util.function.DoubleSupplier,double,double,java.lang.String)"},{"p":"com.lightningrobotics.common.fault","c":"FaultCode","l":"update()"},{"p":"com.lightningrobotics.common.geometry","c":"LightningOdometer","l":"update(Rotation2d, double, double)","url":"update(edu.wpi.first.math.geometry.Rotation2d,double,double)"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU.IMUType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain.Modules","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest.Priority","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter.Mode","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU.IMUType","l":"values()"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain.Modules","l":"values()"},{"p":"com.lightningrobotics.common.testing","c":"SystemTest.Priority","l":"values()"},{"p":"com.lightningrobotics.common.util.filter","c":"JoystickFilter.Mode","l":"values()"},{"p":"com.lightningrobotics.common.geometry.kinematics.swerve","c":"SwerveModuleState","l":"velocity"},{"p":"com.lightningrobotics.common.auto.trajectory","c":"TrajectoryState","l":"velocityMetersPerSecond"},{"p":"com.lightningrobotics.common.geometry.kinematics","c":"DrivetrainSpeed","l":"vx"},{"p":"com.lightningrobotics.common.geometry.kinematics","c":"DrivetrainSpeed","l":"vy"},{"p":"com.lightningrobotics.common.command.core","c":"WaitCommand","l":"WaitCommand()","url":"%3Cinit%3E()"},{"p":"com.lightningrobotics.common.command.core","c":"WaitCommand","l":"WaitCommand(String, String)","url":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"com.lightningrobotics.common.command.core","c":"WaitCommand","l":"WaitCommand(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain","l":"withEachAzimuthMotor(Consumer<MotorController>)","url":"withEachAzimuthMotor(java.util.function.Consumer)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain","l":"withEachDriveMotor(Consumer<MotorController>)","url":"withEachDriveMotor(java.util.function.Consumer)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"withEachLeftMotor(Consumer<MotorController>)","url":"withEachLeftMotor(java.util.function.Consumer)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.swerve","c":"SwerveDrivetrain","l":"withEachModule(Consumer<SwerveModule>)","url":"withEachModule(java.util.function.Consumer)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"withEachMotor(BiConsumer<MotorController, MotorController>)","url":"withEachMotor(java.util.function.BiConsumer)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"withEachMotor(Consumer<MotorController>)","url":"withEachMotor(java.util.function.Consumer)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"withEachMotorIndexed(BiConsumer<MotorController, Integer>)","url":"withEachMotorIndexed(java.util.function.BiConsumer)"},{"p":"com.lightningrobotics.common.subsystem.drivetrain.differential","c":"DifferentialDrivetrain","l":"withEachRightMotor(Consumer<MotorController>)","url":"withEachRightMotor(java.util.function.Consumer)"},{"p":"com.lightningrobotics.common.logging","c":"CommandLogger","l":"write()"},{"p":"com.lightningrobotics.common.fault","c":"FaultCode","l":"write(LightningFaultCodes.Code, String)","url":"write(com.lightningrobotics.common.fault.LightningFaultCodes.Code,java.lang.String)"},{"p":"com.lightningrobotics.common.fault","c":"FaultCode","l":"write(LightningFaultCodes.Code)","url":"write(com.lightningrobotics.common.fault.LightningFaultCodes.Code)"},{"p":"com.lightningrobotics.common.logging","c":"CommandLogger","l":"writeValues()"},{"p":"com.lightningrobotics.common.subsystem.core","c":"LightningIMU","l":"zero()"}]